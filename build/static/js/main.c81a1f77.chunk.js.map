{"version":3,"sources":["sfx/correctsfx.mp3","sfx/incorrectsfx.mp3","helpers/shuffleArray.ts","actions/quizActions.ts","actions/questionActions.ts","actions/createQuizActions.ts","actions/questionFormActions.ts","actions/modalActions.ts","actions/toolbarActions.ts","actions/scoreboardActions.ts","components/Menu/styles.ts","components/Menu/index.tsx","components/Question/scoreboardStyles.ts","components/Question/Scoreboard.tsx","components/Question/styles.ts","components/Question/index.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/CreateQuiz/formStyles.ts","components/CreateQuiz/EditForm.tsx","components/CreateQuiz/questionItemStyles.ts","components/CreateQuiz/QuestionItem.tsx","components/CreateQuiz/CreateForm.tsx","components/CreateQuiz/SaveForm.tsx","components/CreateQuiz/miniQuestionsStyles.ts","components/CreateQuiz/MiniQuestions.tsx","components/CreateQuiz/toolbarStyles.ts","components/CreateQuiz/Toolbar.tsx","components/CreateQuiz/styles.ts","components/CreateQuiz/index.tsx","helpers/arrayMove.ts","reducers/quizReducers.ts","reducers/questionReducers.ts","reducers/modalReducers.ts","reducers/toolbarReducers.ts","reducers/scoreboardReducers.ts","reducers/index.ts","store/index.ts","components/Config/presetItemStyles.ts","components/Config/PresetItem.tsx","components/Config/miniPresetsStyles.ts","components/Config/MiniPresets.tsx","components/Config/styles.ts","components/Config/index.tsx","components/Routes.tsx","components/App.tsx","serviceWorker.ts","index.tsx","themes/mainTheme.ts","types/index.ts","types/actions.ts"],"names":["module","exports","shuffleArray","arr","i","length","j","Math","floor","random","temp","fetchQuestions","createStandardAction","FETCH_QUESTIONS","fetchQuestionsThunk","dispatch","numOfQuestions","a","axios","get","response","console","log","data","results","newData","map","q","question","he","decode","category","options","type","incorrect_answers","incAns","correct_answer","timer","modifiers","timed","startQuiz","START_QUIZ","setPresetId","SET_PRESET_ID","validateChoice","VALIDATE_CHOICE","deleteQuestion","DELETE_QUESTION","rehydrateState","REHYDRATE_STATE","sortQuestion","SORT_QUESTION","savePreset","SAVE_PRESET","createCustomQuestion","CREATE_CUSTOM_QUESTION","saveEditedQuestion","SAVE_EDITED_QUESTION","showModal","SHOW_MODAL","editMode","EDIT_MODE","deleteMode","DELETE_MODE","updateScore","Root","styled","animated","div","Left","props","theme","colors","secondary","displayName","Title","h1","SubText","h2","Right","Button","button","primary","css","Menu","useDispatch","shouldTransition","useSelector","state","router","location","pathname","includes","transitions","useTransition","p","from","opacity","transform","enter","leave","onThinkBtnClick","push","key","style","onClick","to","LeftContainer","RightContainer","ScoreboardTitle","Score","first","amethyst","last","pinkRed","grey","Points","span","Scoreboard","players","scoreboard","firstPlayer","reduce","prevPlayer","team","score","lastPlayer","sortedPlayers","filter","t","pName","QuestionWrapper","OptionsWrapper","Option","FeedbackContainer","choiceValid","CenterContainer","Qnum","Timer","TimeoutOverlay","Question","useState","timedOut","setTimedOut","scoreboardShown","setScoreboardShown","countdownPaused","setCountdownPaused","questionNum","parseInt","match","params","qId","quizPresets","quiz","presets","curPresetId","questions","id","started","qData","useEffect","prevQuestion","playerI","indexOf","player","numOfIndices","initial","scoreboardTransition","config","duration","feedbackContainerTransition","tension","goToNext","setTimeout","renderOptions","option","disabled","uuid","choice","correctAnswer","correctSfx","require","UIfx","volume","throttleMs","play","incorrectSfx","onOptionClick","onTimeout","timerRenderer","minutes","seconds","completed","position","top","right","zIndex","item","undefined","icon","faCheck","faTimes","date","Date","now","renderer","onComplete","Background","open","Content","Modal","children","setModalOpen","onClickOutside","friction","StyledSelect","select","FieldContainer","label","LabelText","OptionLabel","name","checked","StyledInputField","input","Field","SubmitBtn","EditForm","initialValues","difficulty","o1","o2","o3","o4","getCheckedValue","onSubmit","values","newQuestion","index","slice","getNewCorrectAnswer","render","handleSubmit","form","submitting","component","placeholder","meta","value","min","QuestionContainer","QuestionNum","QuestionItem","SortableElement","qPos","toolbarSt","toolbar","editModeState","deleteModeState","modalOpen","aria-labelledby","aria-describedby","CreateForm","setCreateModalOpen","determineCorrectAnswer","customQuestion","o","rapidfire","required","SaveForm","setSaveModalOpen","preset","presetName","CreateQuizBtn","ButtonContainer","MiniQuestions","SortableContainer","modalShown","modal","createModalOpen","saveModalOpen","fetchRandomQuestions","aria-label","lightGrey","Tool","FontAwesomeIcon","ToolContainer","EditTool","modeOn","DeleteTool","Toolbar","faEdit","faTrashAlt","GlobalStyle","createGlobalStyle","GreyBG","Sidebar","CreateTitle","MiniQuestionsContainer","CreateQuiz","handleOnSortEnd","sortedQuestions","oldI","newI","array","backward","movedElem","arrayMove","oldIndex","newIndex","distance","axis","lockAxis","onSortEnd","initialState","JSON","parse","window","localStorage","getItem","quizReducer","createReducer","handleAction","action","newPayload","payload","_","newPresets","setItem","stringify","questionReducer","modalReducer","disableOtherTools","Object","keys","toolbarReducer","history","scoreboardReducer","createHashHistory","basename","hashType","middleware","thunk","routerMiddleware","store","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","selected","PresetName","PresetItem","MiniPresets","ConfigTitle","SectionHeading","Config","section","Routes","exact","path","routeProps","Boolean","hostname","ReactDOM","primaryDark","tertiary","tertiaryDark","mediumGrey","animProps","useSpring","backgroundImage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c81a1f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correctsfx.c5805013.mp3\";","module.exports = __webpack_public_path__ + \"static/media/incorrectsfx.16071710.mp3\";","// Durstenfeld Shuffle Algorithm.\r\nexport const shuffleArray = (arr: any[]): any[] => {\r\n\tfor (let i = arr.length - 1; i > 0; i--) {\r\n\t\tlet j = Math.floor(Math.random() * (i + 1));\r\n\t\tlet temp = arr[i];\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = temp;\r\n\t}\r\n\r\n\treturn arr;\r\n};\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport he from 'he';\r\nimport { FETCH_QUESTIONS, START_QUIZ, SET_PRESET_ID } from '../types';\r\nimport { Question } from '../types';\r\nimport axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { shuffleArray } from '../helpers';\r\n\r\nexport const fetchQuestions = createStandardAction(FETCH_QUESTIONS)<\r\n\tQuestion[]\r\n>();\r\n\r\n// thunk action\r\nexport const fetchQuestionsThunk = async (\r\n\tdispatch: Dispatch,\r\n\tnumOfQuestions: number\r\n): Promise<void> => {\r\n\tconst response = await axios.get(\r\n\t\t`https://opentdb.com/api.php?amount=${numOfQuestions}`\r\n\t);\r\n\tconsole.log(response);\r\n\t// passes on response.data.results (an array of Question objects) to fetchQuestions action creator as payload\r\n\tconst data: Question[] = response.data.results;\r\n\tconst newData = data.map(q => {\r\n\t\treturn {\r\n\t\t\t...q,\r\n\t\t\tquestion: he.decode(q.question),\r\n\t\t\tcategory: he.decode(q.category),\r\n\t\t\t// if type is MCQ, shuffle the array else do not shuffle the array and simply return an array with True and false string literals.\r\n\t\t\toptions:\r\n\t\t\t\tq.type !== 'boolean'\r\n\t\t\t\t\t? shuffleArray([\r\n\t\t\t\t\t\t\t...q.incorrect_answers.map(incAns => he.decode(incAns)),\r\n\t\t\t\t\t\t\the.decode(q.correct_answer)\r\n\t\t\t\t\t  ])\r\n\t\t\t\t\t: ['True', 'False'],\r\n\t\t\ttimer: 200,\r\n\t\t\tmodifiers: {\r\n\t\t\t\ttimed: true\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\tdispatch(fetchQuestions(newData));\r\n};\r\n\r\nexport const startQuiz = createStandardAction(START_QUIZ)();\r\n// sets the chosen preset id\r\nexport const setPresetId = createStandardAction(SET_PRESET_ID)<string>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { VALIDATE_CHOICE, DELETE_QUESTION, REHYDRATE_STATE } from '../types';\r\n\r\nexport const validateChoice = createStandardAction(VALIDATE_CHOICE)<{\r\n\tchoice: string;\r\n\tcorrectAnswer: string;\r\n}>();\r\n\r\n// accepts id of question as argument\r\nexport const deleteQuestion = createStandardAction(DELETE_QUESTION)<string>();\r\n\r\nexport const rehydrateState = createStandardAction(REHYDRATE_STATE)<\r\n\tundefined\r\n>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { SORT_QUESTION, SAVE_PRESET, QuizPreset, Question } from '../types';\r\n\r\nexport const sortQuestion = createStandardAction(SORT_QUESTION)<Question[]>();\r\nexport const savePreset = createStandardAction(SAVE_PRESET)<QuizPreset>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport {\r\n\tSAVE_EDITED_QUESTION,\r\n\tCREATE_CUSTOM_QUESTION,\r\n\tQuestion\r\n} from '../types';\r\n\r\nexport const createCustomQuestion = createStandardAction(\r\n\tCREATE_CUSTOM_QUESTION\r\n)<Question>();\r\n\r\nexport const saveEditedQuestion = createStandardAction(SAVE_EDITED_QUESTION)<\r\n\tQuestion\r\n>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { SHOW_MODAL } from '../types';\r\n\r\nexport const showModal = createStandardAction(SHOW_MODAL)<undefined>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { EDIT_MODE, DELETE_MODE } from '../types';\r\n\r\nexport const editMode = createStandardAction(EDIT_MODE)<'ON' | 'OFF'>();\r\nexport const deleteMode = createStandardAction(DELETE_MODE)<'ON' | 'OFF'>();\r\n","import { createStandardAction } from 'typesafe-actions';\r\n\r\nexport const updateScore = createStandardAction('UPDATE_SCORE')<{\r\n\tscore: number;\r\n\tid: number;\r\n}>();\r\n","import styled, { css } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\n// PROPS INTERFACE DEFINITIONS\r\ninterface ButtonProps {\r\n\tprimary?: boolean;\r\n}\r\n\r\nexport const Root = styled(animated.div)`\r\n\t--primary-rgb-color: 38, 188, 99; /* rgb version of our primary green color */\r\n\theight: 100vh;\r\n\tpadding-left: 6.9rem;\r\n\tpadding-top: 18.2rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nexport const Left = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-self: flex-start;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\ttext-transform: uppercase;\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n`;\r\n\r\nLeft.displayName = 'Left'; // For debugging purposes (shows name of component in react dev tools)\r\n\r\n// reused styled component. maybe move this to a separate file\r\nexport const Title = styled.h1`\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\ttext-transform: uppercase;\r\n\tfont-size: 10rem;\r\n\tfont-weight: 300;\r\n`;\r\n\r\nTitle.displayName = 'Title';\r\n\r\nexport const SubText = styled.h2`\r\n\tfont-size: 1.5rem;\r\n\tmargin-top: 0.8rem;\r\n\tfont-weight: 700;\r\n`;\r\n\r\nSubText.displayName = 'SubText';\r\n\r\nexport const Right = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-self: flex-start;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-right: 32.6rem;\r\n\tmargin-top: 3rem;\r\n\ttext-transform: uppercase;\r\n\tfont-size: 2.5rem;\r\n\theight: 28.4rem;\r\n`;\r\n\r\nRight.displayName = 'Right';\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tmin-width: 20.5rem;\r\n\tpadding: 1.3rem;\r\n\tfont-size: 2.5rem;\r\n\tbackground-color: ${props =>\r\n\t\tprops.primary ? props.theme.colors.primary : props.theme.colors.secondary};\r\n\t${props =>\r\n\t\tprops.primary\r\n\t\t\t? css`\r\n\t\t\t\t\tborder: none;\r\n\t\t\t\t\tcolor: ${props => props.theme.colors.secondary};\r\n\t\t\t  `\r\n\t\t\t: css`\r\n\t\t\t\t\tborder: 2px solid ${props => props.theme.colors.primary};\r\n\t\t\t\t\tcolor: ${props => props.theme.colors.primary};\r\n\t\t\t  `}\r\n\ttext-transform: uppercase;\r\n\tborder-radius: 2.5rem;\r\n\tbox-shadow: 3px 3px 6px rgba(var(--primary-rgb-color), 0.25);\r\n\ttransition: all 0.3s;\r\n\r\n\t:hover {\r\n\t\ttransform: translateY(-3px);\r\n\t\tbox-shadow: 3px 5px 6px rgba(var(--primary-rgb-color), 0.3);\r\n\t}\r\n\r\n\t:active {\r\n\t\ttransform: translateY(-1px);\r\n\t\tbox-shadow: 3px 2px 6px rgba(var(--primary-rgb-color), 0.2);\r\n\t}\r\n`;\r\n\r\nButton.displayName = 'Button';\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTransition } from 'react-spring';\r\nimport { Link } from 'react-router-dom';\r\nimport { push } from 'connected-react-router';\r\nimport { startQuiz } from '../../actions';\r\nimport { RootState } from '../../types';\r\nimport { Root, Title, SubText, Left, Right, Button } from './styles';\r\n\r\nexport const Menu: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { location } = useSelector((state: RootState) => state.router);\r\n\tconst shouldTransition = location.pathname.includes('create') ? 1 : 0;\r\n\tconst transitions = useTransition(shouldTransition, p => p, {\r\n\t\tfrom: { opacity: 0, transform: 'translate(100%,0)' },\r\n\t\tenter: { opacity: 1, transform: 'translate(0%,0)' },\r\n\t\tleave: { opacity: 0, transform: 'translate(-50%,0)' }\r\n\t});\r\n\r\n\tconst onThinkBtnClick = (): void => {\r\n\t\tdispatch(startQuiz());\r\n\t\tdispatch(push('/start/q/0'));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{transitions.map(({ props, key }) => (\r\n\t\t\t\t<Root key={key} style={props}>\r\n\t\t\t\t\t<Left>\r\n\t\t\t\t\t\t<Title>Quizzer</Title>\r\n\t\t\t\t\t\t<SubText>An app for designing and participating in quizzes</SubText>\r\n\t\t\t\t\t</Left>\r\n\r\n\t\t\t\t\t<Right>\r\n\t\t\t\t\t\t<Button primary onClick={onThinkBtnClick}>\r\n\t\t\t\t\t\t\tThink\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Link to=\"/create\">\r\n\t\t\t\t\t\t\t<Button>Create</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/configure\">\r\n\t\t\t\t\t\t\t<Button>Configure</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Button>Explore</Button>\r\n\t\t\t\t\t</Right>\r\n\t\t\t\t</Root>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import styled, { css } from 'styled-components';\r\nimport { Title } from '../Menu/styles';\r\n\r\ninterface ScoreProps {\r\n\tfirst?: boolean;\r\n\tlast?: boolean;\r\n}\r\n\r\nexport const Root = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tz-index: 1000;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tbackground-image: linear-gradient(\r\n\t\t90deg,\r\n\t\t#2ac46a 0%,\r\n\t\t#2ac46a 30%,\r\n\t\t#fcfcf3 30%\r\n\t);\r\n`;\r\n\r\nexport const LeftContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 30vw;\r\n\theight: 100vh;\r\n`;\r\n\r\n// RightContainer will contain the respective scores\r\nexport const RightContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 70vw;\r\n\theight: 100vh;\r\n\tjustify-content: space-around;\r\n\talign-items: flex-start;\r\n\tflex-direction: column;\r\n\tpadding: 3rem 0rem;\r\n\tpadding-left: 4rem;\r\n`;\r\n\r\nexport const ScoreboardTitle = styled(Title)`\r\n\tletter-spacing: 1rem;\r\n\tfont-size: 3.4rem;\r\n`;\r\n\r\nexport const Score = styled.div<ScoreProps>`\r\n\tfont-weight: 300;\r\n\tfont-size: 12rem;\r\n\ttext-transform: uppercase;\r\n\t${props => {\r\n\t\tif (props.first) {\r\n\t\t\treturn css`\r\n\t\t\t\tcolor: ${props => props.theme.colors.amethyst};\r\n\t\t\t`;\r\n\t\t} else if (!props.first && !props.last) {\r\n\t\t\treturn css`\r\n\t\t\t\tcolor: ${props => props.theme.colors.grey};\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn css`\r\n\t\t\t\tcolor: ${props => props.theme.colors.pinkRed};\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n`;\r\n\r\nexport const Points = styled.span`\r\n\tfont-weight: 700;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../types';\r\nimport {\r\n\tRoot,\r\n\tScoreboardTitle,\r\n\tLeftContainer,\r\n\tRightContainer,\r\n\tScore,\r\n\tPoints\r\n} from './scoreboardStyles';\r\n\r\n/** RULES\r\n * Provide props to component describing how many players are participating\r\n * +3 points for every correct answer (possibly implement a solution where points are awarded based on completion time)\r\n * -1 points for every incorrect answer or time out\r\n */\r\n\r\nexport const Scoreboard: React.FC = () => {\r\n\tconst players = useSelector((state: RootState) => state.scoreboard.players);\r\n\tconst firstPlayer = players.reduce((prevPlayer, team) => {\r\n\t\treturn prevPlayer.score > team.score ? prevPlayer : team;\r\n\t});\r\n\tconst lastPlayer = players.reduce((prevPlayer, team) => {\r\n\t\treturn prevPlayer.score < team.score ? prevPlayer : team;\r\n\t});\r\n\tconst sortedPlayers = [\r\n\t\tfirstPlayer,\r\n\t\t...players.filter(t => t !== firstPlayer && t !== lastPlayer),\r\n\t\tlastPlayer\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<LeftContainer>\r\n\t\t\t\t<ScoreboardTitle>Scoreboard</ScoreboardTitle>\r\n\t\t\t</LeftContainer>\r\n\r\n\t\t\t<RightContainer>\r\n\t\t\t\t{sortedPlayers.map((t, i) => {\r\n\t\t\t\t\t// if index is 0\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Score first>\r\n\t\t\t\t\t\t\t\t{t.pName}: <Points>{t.score}</Points>\r\n\t\t\t\t\t\t\t</Score>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (i === sortedPlayers.length - 1) {\r\n\t\t\t\t\t\t// if last index\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Score last>\r\n\t\t\t\t\t\t\t\t{t.pName}: <Points>{t.score}</Points>\r\n\t\t\t\t\t\t\t</Score>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if any indices between first and last\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Score>\r\n\t\t\t\t\t\t\t\t{t.pName}: <Points>{t.score}</Points>\r\n\t\t\t\t\t\t\t</Score>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</RightContainer>\r\n\t\t</Root>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface StartedProps {\r\n\tstarted: boolean;\r\n}\r\n\r\ninterface TimerProps {\r\n\tcompleted: boolean;\r\n}\r\n\r\ninterface FeedbackContainerProps {\r\n\tchoiceValid?: number | undefined;\r\n}\r\n\r\nexport const Root = styled(animated.div)`\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const QuestionWrapper = styled.div<StartedProps>`\r\n\tposition: relative;\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\theight: 50vh;\r\n\twidth: 100vw;\r\n\tpadding: 0rem 2rem;\r\n\tfont-size: 5rem;\r\n\tfont-weight: 300;\r\n\ttext-transform: uppercase;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nexport const OptionsWrapper = styled.div<StartedProps>`\r\n\tposition: relative;\r\n\theight: 50vh;\r\n\twidth: 100vw;\r\n\tpadding: 4rem 2rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n`;\r\n\r\nOptionsWrapper.displayName = 'OptionsWrapper';\r\n\r\nexport const Option = styled.button`\r\n\tposition: relative;\r\n\tz-index: 5;\r\n\tpadding: 2rem;\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 3px 5px 6px rgba(46, 46, 46, 0.25);\r\n\tborder: none;\r\n\tfont-family: inherit;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\ttext-decoration: none;\r\n\tfont-size: 3rem;\r\n\tfont-weight: 300;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\theight: 95%;\r\n\twidth: 20%;\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\ttransition: all 0.3s;\r\n\r\n\t:hover {\r\n\t\ttransform: translateY(-3px);\r\n\t\tbox-shadow: 3.5px 6px 6px rgba(46, 46, 46, 0.3);\r\n\t}\r\n\r\n\t:active {\r\n\t\ttransform: translateY(-0.5px);\r\n\t\tbox-shadow: 2.5px 4.5px 6px rgba(46, 46, 46, 0.2);\r\n\t}\r\n`;\r\n\r\nOption.displayName = 'Options';\r\n\r\nexport const FeedbackContainer = styled(animated.div)<FeedbackContainerProps>`\r\n\t/* Have the origin point be centered on the option container */\r\n\tposition: relative;\r\n\ttransform: translate(-50%, -50%);\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tz-index: 25;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: ${props =>\r\n\t\tprops.choiceValid ? props.theme.colors.primary : '#ff0000'};\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\tfont-size: 30rem;\r\n\ttransform-origin: center;\r\n`;\r\n\r\nexport const CenterContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tz-index: 20;\r\n`;\r\n\r\nexport const Qnum = styled.span`\r\n\tdisplay: inline-block;\r\n\tfont-weight: 700;\r\n`;\r\n\r\nexport const Timer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tz-index: 20;\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\tcolor: ${props => props.theme.colors.pinkRed};\r\n\tfont-weight: 700;\r\n\tpadding: 0.8rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 6rem;\r\n\theight: 6rem;\r\n\tfont-size: 1.7rem;\r\n`;\r\n\r\nTimer.displayName = 'Timer';\r\n\r\nexport const TimeoutOverlay = styled(FeedbackContainer)<TimerProps>`\r\n\tbackground-color: ${props => props.theme.colors.pinkRed};\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Countdown from 'react-countdown-now';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport UIfx from 'uifx';\r\nimport { Link } from 'react-router-dom';\r\nimport { Scoreboard } from './Scoreboard';\r\nimport { RootState } from '../../types';\r\nimport { validateChoice, rehydrateState, updateScore } from '../../actions';\r\nimport {\r\n\tRoot,\r\n\tQuestionWrapper,\r\n\tOptionsWrapper,\r\n\tOption,\r\n\tQnum,\r\n\tTimer,\r\n\tTimeoutOverlay,\r\n\tCenterContainer,\r\n\tFeedbackContainer\r\n} from './styles';\r\nimport uuid from 'uuid/v4';\r\nimport { push } from 'connected-react-router';\r\n\r\ninterface RouteParams {\r\n\tqId: string;\r\n}\r\n\r\nexport const Question: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [timedOut, setTimedOut] = useState(false);\r\n\tconst [scoreboardShown, setScoreboardShown] = useState(false);\r\n\tconst [countdownPaused, setCountdownPaused] = useState(false);\r\n\tconst choiceValid = useSelector(\r\n\t\t(state: RootState) => state.question.choiceValid\r\n\t);\r\n\tconst players = useSelector((state: RootState) => state.scoreboard.players);\r\n\tconst questionNum = parseInt(props.match.params.qId);\r\n\tconst quizPresets = useSelector((state: RootState) => state.quiz.presets);\r\n\t// gets the chosen preset id from config form\r\n\tconst curPresetId = useSelector((state: RootState) => state.quiz.curPresetId);\r\n\t// selects the appropriate preset based on chosen id\r\n\tconst curPreset = quizPresets.filter(p => p.id === curPresetId)[0];\r\n\tconst { questions } = curPreset;\r\n\tconst started = useSelector((state: RootState) => state.quiz.started);\r\n\tconst qData = questions[questionNum];\r\n\tconst { question, options } = qData;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimedOut(false);\r\n\t\tsetScoreboardShown(false);\r\n\t\tdispatch(rehydrateState()); // sets choiceValid back to null after each question\r\n\t}, [dispatch, questionNum]);\r\n\r\n\tuseEffect(() => {\r\n\t\tquestions.map((q, i) => {\r\n\t\t\t// NOTE: THIS CODE BREAKS IF NUMBER OF PLAYERS EXCEEDS 4. MIN NUMBER OF TEAMS IS 2\r\n\t\t\tconst prevQuestion = questions[i - 1];\r\n\t\t\tlet playerI: number = 0;\r\n\t\t\tif (prevQuestion) playerI = players.indexOf(questions[i - 1].player);\r\n\t\t\tconst numOfIndices = players.length - 1;\r\n\t\t\t// we're brute handling all edge cases here. maybe try implementing a better solution?\r\n\t\t\tif (!prevQuestion) {\r\n\t\t\t\tq.player = players[0];\r\n\t\t\t} else if (numOfIndices - playerI === 1) {\r\n\t\t\t\tq.player = players[numOfIndices];\r\n\t\t\t} else if (playerI === 0) {\r\n\t\t\t\tq.player = players[playerI + 1];\r\n\t\t\t} else {\r\n\t\t\t\tq.player = players[numOfIndices - playerI];\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...q\r\n\t\t\t};\r\n\t\t});\r\n\t\t// eslint-disable-next-line\r\n\t}, [questions, players]);\r\n\r\n\tconst transitions = useTransition(questionNum, p => p, {\r\n\t\tinitial: { opacity: 0 },\r\n\t\tfrom: { opacity: 0, transform: 'translate3d(100%,0,0)' },\r\n\t\tenter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\r\n\t\tleave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\r\n\t});\r\n\r\n\tconst scoreboardTransition = useTransition(scoreboardShown, null, {\r\n\t\tinitial: { opacity: 0 },\r\n\t\tfrom: { opacity: 0 },\r\n\t\tenter: { opacity: 1 },\r\n\t\tleave: { opacity: 0 },\r\n\t\tconfig: { duration: 0 }\r\n\t});\r\n\r\n\tconst feedbackContainerTransition = useTransition(choiceValid, null, {\r\n\t\tinitial: { opacity: 0 },\r\n\t\tfrom: { transform: 'scale(0)' },\r\n\t\tenter: { transform: 'scale(1)' },\r\n\t\tleave: { opacity: 0, transform: 'scale(0)' },\r\n\t\tconfig: { tension: 250 }\r\n\t});\r\n\r\n\tconst renderQuestion = (): JSX.Element => {\r\n\t\t// question is returned in encoded format (HTML encoding). we have to decode it before returning\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Qnum>{questionNum + 1}.</Qnum> {question}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst goToNext = (): void => {\r\n\t\tsetTimeout(() => {\r\n\t\t\t// if all the questions are exhausted, user is forced back to menu\r\n\t\t\tif (questionNum >= questions.length - 1) {\r\n\t\t\t\tdispatch(push('/'));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(push(`/start/q/${questionNum + 1}`));\r\n\t\t\t}\r\n\t\t\tsetScoreboardShown(false);\r\n\t\t}, 7500);\r\n\t};\r\n\r\n\tconst onOptionClick = (option: string): void => {\r\n\t\tsetCountdownPaused(true);\r\n\t\t// a small delay for validating choice here to provide a sense of tension\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tvalidateChoice({ choice: option, correctAnswer: qData.correct_answer })\r\n\t\t\t);\r\n\r\n\t\t\tif (option === qData.correct_answer) {\r\n\t\t\t\tdispatch(updateScore({ score: 3, id: qData.player.id }));\r\n\t\t\t\tconst correctSfx = require('../../sfx/correctsfx.mp3');\r\n\t\t\t\tconst correct = new UIfx(correctSfx, {\r\n\t\t\t\t\tvolume: 1,\r\n\t\t\t\t\tthrottleMs: 100\r\n\t\t\t\t});\r\n\t\t\t\tcorrect.play();\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(updateScore({ score: -1, id: qData.player.id }));\r\n\t\t\t\tconst incorrectSfx = require('../../sfx/incorrectsfx.mp3');\r\n\t\t\t\tconst incorrect = new UIfx(incorrectSfx, {\r\n\t\t\t\t\tvolume: 1,\r\n\t\t\t\t\tthrottleMs: 100\r\n\t\t\t\t});\r\n\t\t\t\tincorrect.play();\r\n\t\t\t}\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetScoreboardShown(true);\r\n\t\t\t}, 2500);\r\n\t\t\tgoToNext();\r\n\t\t}, 500);\r\n\t};\r\n\r\n\t// If any of the options are a falsey value, don't return anything\r\n\t// This is to prevent blank options being rendered when the question does not have exactly 4 or 2 options as expected\r\n\tconst renderOptions = (): (JSX.Element | '')[] => {\r\n\t\treturn options.map(\r\n\t\t\toption =>\r\n\t\t\t\toption && (\r\n\t\t\t\t\t<Option\r\n\t\t\t\t\t\tdisabled={choiceValid !== null}\r\n\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\tonClick={() => onOptionClick(option)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{option}\r\n\t\t\t\t\t</Option>\r\n\t\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tconst onTimeout = (): void => {\r\n\t\tsetTimedOut(true);\r\n\t\t// validateChoice would always return false here. kind of a hacky way of doing it\r\n\t\tdispatch(validateChoice({ choice: 'timeout', correctAnswer: '' }));\r\n\t\tdispatch(updateScore({ score: -1, id: qData.player.id }));\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetScoreboardShown(true);\r\n\t\t}, 2500);\r\n\t\tgoToNext();\r\n\t};\r\n\r\n\tconst timerRenderer = ({\r\n\t\tminutes,\r\n\t\tseconds,\r\n\t\tcompleted\r\n\t}: {\r\n\t\tminutes: number;\r\n\t\tseconds: number;\r\n\t\tcompleted: boolean;\r\n\t}): JSX.Element => {\r\n\t\tif (completed) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\treturn <Timer>{`${minutes ? minutes * 60 + seconds : seconds}`}</Timer>;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{transitions.map(({ props, key }) => (\r\n\t\t\t\t<Root key={key} style={props}>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\ttop: '10%',\r\n\t\t\t\t\t\t\tright: '10%',\r\n\t\t\t\t\t\t\tzIndex: 40\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<QuestionWrapper started={started}>\r\n\t\t\t\t\t\t{renderQuestion()}\r\n\t\t\t\t\t</QuestionWrapper>\r\n\t\t\t\t\t<OptionsWrapper started={started}>{renderOptions()}</OptionsWrapper>\r\n\t\t\t\t\t<CenterContainer>\r\n\t\t\t\t\t\t{scoreboardTransition.map(\r\n\t\t\t\t\t\t\t({ item, props, key }) =>\r\n\t\t\t\t\t\t\t\titem && (\r\n\t\t\t\t\t\t\t\t\t<animated.div key={key} style={props}>\r\n\t\t\t\t\t\t\t\t\t\t<Scoreboard />\r\n\t\t\t\t\t\t\t\t\t</animated.div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{feedbackContainerTransition.map(\r\n\t\t\t\t\t\t\t({ item, props, key }) =>\r\n\t\t\t\t\t\t\t\titem !== null &&\r\n\t\t\t\t\t\t\t\t!scoreboardShown &&\r\n\t\t\t\t\t\t\t\t!timedOut && (\r\n\t\t\t\t\t\t\t\t\t<FeedbackContainer\r\n\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\tstyle={props}\r\n\t\t\t\t\t\t\t\t\t\tchoiceValid={choiceValid ? 1 : undefined}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{choiceValid ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</FeedbackContainer>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{qData.modifiers.timed && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Countdown\r\n\t\t\t\t\t\t\t\t\tdate={Date.now() + qData.timer * 1000}\r\n\t\t\t\t\t\t\t\t\trenderer={timerRenderer}\r\n\t\t\t\t\t\t\t\t\tonComplete={countdownPaused ? undefined : onTimeout}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{feedbackContainerTransition.map(\r\n\t\t\t\t\t\t\t\t\t({ item, props, key }) =>\r\n\t\t\t\t\t\t\t\t\t\titem !== null &&\r\n\t\t\t\t\t\t\t\t\t\ttimedOut &&\r\n\t\t\t\t\t\t\t\t\t\t!scoreboardShown && (\r\n\t\t\t\t\t\t\t\t\t\t\t<TimeoutOverlay\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={props}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcompleted={timedOut}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTime out!\r\n\t\t\t\t\t\t\t\t\t\t\t</TimeoutOverlay>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CenterContainer>\r\n\t\t\t\t</Root>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const Root = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100vh;\r\n\tz-index: 100;\r\n\twidth: 100vw;\r\n`;\r\n\r\nexport const Background = styled.div<{ open: boolean }>`\r\n\tbackground-image: linear-gradient(\r\n\t\trgba(0, 0, 0, 0.4) 0%,\r\n\t\trgba(0, 0, 0, 0.4) 100%\r\n\t);\r\n\topacity: ${props => (props.open ? 1 : 0)};\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tz-index: ${props => (props.open ? 101 : -100)};\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\ttransition: all 0.3s;\r\n`;\r\n\r\nexport const Content = styled(animated.div)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tz-index: 200;\r\n\tbackground-color: ${props => props.theme.colors.secondary};\r\n\twidth: 68.3rem;\r\n\theight: 53.7rem;\r\n\tpadding: 2rem;\r\n\tborder-radius: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showModal } from '../../actions';\r\nimport { useTransition } from 'react-spring';\r\nimport { Root, Background, Content } from './styles';\r\n\r\ninterface ModalProps {\r\n\topen: boolean;\r\n\tsetModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({\r\n\tchildren,\r\n\topen,\r\n\tsetModalOpen\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst onClickOutside = (): void => {\r\n\t\tsetModalOpen(false);\r\n\t\tdispatch(showModal());\r\n\t\t// turn edit mode off if edit mode is turned on in the first place\r\n\t\t// this is probably a bad way of doing things because as the number of tools increase, we would have to turn off each mode separately. maybe we could do a check of all the modes that are set to true and turn off that specific mode to false\r\n\t};\r\n\r\n\tconst transitions = useTransition(open, null, {\r\n\t\tfrom: { opacity: 0, transform: 'scale(0)' },\r\n\t\tenter: { opacity: 1, transform: 'scale(1)' },\r\n\t\tleave: { opacity: 0, transform: 'scale(0)' },\r\n\t\tconfig: (item, state) => {\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase 'enter':\r\n\t\t\t\t\treturn { tension: 300, friction: 26 };\r\n\t\t\t\tcase 'leave':\r\n\t\t\t\t\treturn { tension: 310, friction: 26 };\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn { tension: 170, friction: 26 };\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{transitions.map(\r\n\t\t\t\t({ item, key, props }) =>\r\n\t\t\t\t\titem && (\r\n\t\t\t\t\t\t<Root>\r\n\t\t\t\t\t\t\t<Background open={open} onClick={onClickOutside} />\r\n\t\t\t\t\t\t\t<Content key={key} style={props}>\r\n\t\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t\t</Root>\r\n\t\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Button } from '../Menu/styles';\r\nimport { Field } from 'react-final-form';\r\n\r\ninterface SInputProps {\r\n\tchecked?: string;\r\n}\r\n\r\ninterface OptionLabelProps extends SInputProps {\r\n\tname: string;\r\n}\r\n\r\nexport const StyledSelect = styled.select`\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\tborder-radius: 1rem;\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\tpadding: 0.5rem 0.8rem;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 1.8rem;\r\n\tbox-shadow: 3px 3px 6px rgba(46, 46, 46, 0.2);\r\n\tflex: 0 0 70%;\r\n\tmargin-left: 1rem;\r\n\tfont-family: inherit;\r\n`;\r\n\r\nexport const FieldContainer = styled.label`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: flex-end;\r\n\talign-items: center;\r\n\ttext-align: right;\r\n\tline-height: 2.6rem;\r\n\tmargin-bottom: 1rem;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n\tfont-size: 3rem;\r\n\tcolor: ${props => props.theme.colors.grey};\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nexport const OptionLabel = styled(LabelText)<OptionLabelProps>`\r\n\tcursor: pointer;\r\n\ttext-transform: uppercase;\r\n\tcolor: ${props =>\r\n\t\tprops.name === props.checked\r\n\t\t\t? props.theme.colors.primary\r\n\t\t\t: props.theme.colors.grey};\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\tborder-radius: 1rem;\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\tpadding: 0.5rem 0.8rem;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 1.8rem;\r\n\tbox-shadow: 3px 3px 6px rgba(46, 46, 46, 0.2);\r\n\tflex: 0 0 70%;\r\n\tmargin-left: 1rem;\r\n\tfont-family: inherit;\r\n`;\r\n\r\n// WORKAROUND TO FIX INITIAL VALUES NOT APPEARING. IMPLEMENT A BETTER SOLUTION\r\nexport const StyledInputField = styled(Field)<SInputProps>`\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\tbackground-color: ${props =>\r\n\t\tprops.checked && props.name === props.checked\r\n\t\t\t? props.theme.colors.primary\r\n\t\t\t: props.theme.colors.grey};\r\n\tborder-radius: 1rem;\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\tpadding: 0.5rem 0.8rem;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 1.8rem;\r\n\tflex: 0 0 70%;\r\n\tmargin-left: 1rem;\r\n\tfont-family: inherit;\r\n`;\r\n\r\nexport const SubmitBtn = styled(Button)`\r\n\tfont-size: 2.2rem;\r\n\tmargin-bottom: 3rem;\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\r\n\t:hover {\r\n\t\ttransform: translate(-50%, -3px);\r\n\t}\r\n\r\n\t:active {\r\n\t\ttransform: translate(-50%, -1px);\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { saveEditedQuestion, showModal } from '../../actions';\r\nimport { Question } from '../../types';\r\nimport {\r\n\tFieldContainer,\r\n\tLabelText,\r\n\tStyledInputField,\r\n\tStyledSelect,\r\n\tOptionLabel\r\n} from './formStyles';\r\n\r\ninterface EditFormProps {\r\n\tquestion: Question;\r\n\tsetModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const EditForm: React.FC<EditFormProps> = props => {\r\n\tinterface FormValues {\r\n\t\tquestion: string;\r\n\t\tdifficulty: string;\r\n\t\to1: string;\r\n\t\to2: string;\r\n\t\to3: string;\r\n\t\to4: string;\r\n\t\tchecked: string;\r\n\t\ttimer: number;\r\n\t\ttimed: boolean;\r\n\t}\r\n\r\n\tconst { question, setModalOpen } = props;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onFormSubmit = (values: FormValues) => {\r\n\t\tconst options = [values.o1, values.o2, values.o3, values.o4];\r\n\t\tconst getNewCorrectAnswer = (): string => {\r\n\t\t\tconst index = parseInt(values.checked.slice(1)) - 1;\r\n\t\t\treturn options[index];\r\n\t\t};\r\n\r\n\t\tconst newQuestion = {\r\n\t\t\t...question,\r\n\t\t\tquestion: values.question,\r\n\t\t\tdifficulty: values.difficulty,\r\n\t\t\toptions,\r\n\t\t\tcorrect_answer: getNewCorrectAnswer(),\r\n\t\t\ttimer: values.timer,\r\n\t\t\tmodifiers: {\r\n\t\t\t\ttimed: values.timed\r\n\t\t\t}\r\n\t\t};\r\n\t\tdispatch(saveEditedQuestion(newQuestion));\r\n\t\tsetModalOpen(false);\r\n\t\tdispatch(showModal());\r\n\t};\r\n\r\n\tconst getCheckedValue = (): string => {\r\n\t\tfor (let i = 0; i < question.options.length; i++) {\r\n\t\t\t// if at any index we find the correct answer, return the appropriate string literal\r\n\t\t\tif (question.options[i] === question.correct_answer) return `o${i + 1}`;\r\n\t\t}\r\n\t\treturn '';\r\n\t};\r\n\r\n\tconst initialValues = {\r\n\t\tquestion: question.question,\r\n\t\tdifficulty: question.difficulty,\r\n\t\to1: question.options[0],\r\n\t\to2: question.options[1],\r\n\t\to3: question.options[2],\r\n\t\to4: question.options[3],\r\n\t\tchecked: getCheckedValue(),\r\n\t\ttimer: question.timer,\r\n\t\ttimed: question.modifiers.timed\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tonSubmit={onFormSubmit}\r\n\t\t\trender={({ handleSubmit, form, submitting, values }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<LabelText>Question</LabelText>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"question\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter New Question\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field name=\"difficulty\">\r\n\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<LabelText>Difficulty</LabelText>\r\n\t\t\t\t\t\t\t\t\t<StyledSelect {...input}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"easy\">Easy</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"medium\">Medium</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"hard\">Hard</option>\r\n\t\t\t\t\t\t\t\t\t</StyledSelect>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o1\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o1\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 1\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o1\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o2\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o2\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 2\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o2\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t{question.type !== 'boolean' && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"o3\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<OptionLabel name=\"o3\" checked={values.checked}>\r\n\t\t\t\t\t\t\t\t\tOption 3\r\n\t\t\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\t\t\tname=\"o3\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"o4\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<OptionLabel name=\"o4\" checked={values.checked}>\r\n\t\t\t\t\t\t\t\t\tOption 4\r\n\t\t\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\t\t\tname=\"o4\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FieldContainer>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"timed\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LabelText>Timer</LabelText>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"timer\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\tdisabled={!values.timed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<button type=\"submit\">Save!</button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Root = styled.div``;\r\n\r\nexport const QuestionContainer = styled.div`\r\n\tpadding: 0.5rem 1rem;\r\n\tborder-radius: 15px;\r\n\tbackground-color: ${props => props.theme.colors.secondary};\r\n\tcolor: ${props => props.theme.colors.grey};\r\n\tbox-shadow: 2px 3.5px 6px rgba(var(--secondary-rgb-color), 0.15);\r\n\tposition: relative;\r\n\tmargin: 1rem 0rem;\r\n\tfont-size: 3rem;\r\n\tfont-weight: 300;\r\n\ttext-transform: uppercase;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const QuestionNum = styled.span`\r\n\tfont-size: 3rem;\r\n\tfont-weight: 700;\r\n\tcolor: ${props => props.theme.colors.primary};\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SortableElement } from 'react-sortable-hoc';\r\nimport uuid from 'uuid/v4';\r\nimport { Modal } from '../Modal';\r\nimport { showModal, deleteQuestion } from '../../actions';\r\nimport { EditForm } from './EditForm';\r\nimport { Question, RootState } from '../../types';\r\nimport { Root, QuestionContainer, QuestionNum } from './questionItemStyles';\r\n\r\ninterface QuestionItemProps {\r\n\tquestion: Question;\r\n\ttype: string;\r\n\tqPos: number;\r\n}\r\n\r\nconst WrappedComponent: React.FC<QuestionItemProps> = ({\r\n\ttype,\r\n\tquestion,\r\n\tqPos\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst toolbarSt = useSelector((state: RootState) => state.toolbar);\r\n\tconst { editModeState, deleteModeState } = toolbarSt;\r\n\t// have to use component state so that all of the modals don't open at once\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\r\n\tconst onQuestionClick = (): void => {\r\n\t\t// only open modal if editMode is set to true\r\n\t\tswitch (true) {\r\n\t\t\tcase editModeState:\r\n\t\t\t\tdispatch(showModal());\r\n\t\t\t\tsetModalOpen(true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase deleteModeState:\r\n\t\t\t\tdispatch(deleteQuestion(question.qId));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetModalOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<QuestionContainer onClick={onQuestionClick}>\r\n\t\t\t\t<QuestionNum>{qPos}. </QuestionNum>\r\n\t\t\t\t{question.question}\r\n\t\t\t</QuestionContainer>\r\n\t\t\t<Modal\r\n\t\t\t\topen={modalOpen}\r\n\t\t\t\tsetModalOpen={setModalOpen}\r\n\t\t\t\tkey={uuid()}\r\n\t\t\t\taria-labelledby=\"modal-label\"\r\n\t\t\t\taria-describedby=\"model-desc\"\r\n\t\t\t>\r\n\t\t\t\t<EditForm question={question} setModalOpen={setModalOpen} />\r\n\t\t\t</Modal>\r\n\t\t</Root>\r\n\t);\r\n};\r\n\r\n// exports the above declared functional component as a child of SortableElement\r\nexport const QuestionItem = SortableElement(WrappedComponent);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Field } from 'react-final-form';\r\nimport uuid from 'uuid/v4';\r\nimport { shuffleArray } from '../../helpers';\r\nimport { createCustomQuestion, showModal } from '../../actions';\r\nimport {\r\n\tStyledInputField,\r\n\tStyledSelect,\r\n\tFieldContainer,\r\n\tOptionLabel,\r\n\tLabelText\r\n} from './formStyles';\r\n\r\ninterface CreateFormProps {\r\n\tsetCreateModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const CreateForm: React.FC<CreateFormProps> = props => {\r\n\tinterface FormValues {\r\n\t\tquestion: string;\r\n\t\tdifficulty: string;\r\n\t\to1: string;\r\n\t\to2: string;\r\n\t\to3: string;\r\n\t\to4: string;\r\n\t\tchecked: string;\r\n\t\ttimer: number;\r\n\t\ttimed: boolean;\r\n\t}\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst { setCreateModalOpen } = props;\r\n\r\n\tconst handleOnSubmit = (values: FormValues) => {\r\n\t\tconst options = [values.o1, values.o2, values.o3, values.o4];\r\n\t\tconst determineCorrectAnswer = (): string => {\r\n\t\t\tlet correct_answer: string;\r\n\r\n\t\t\t// assigns value of correct_answer based on value of formOptions.checked. by default it returns an error string.\r\n\t\t\tswitch (values.checked) {\r\n\t\t\t\tcase 'o1':\r\n\t\t\t\t\tcorrect_answer = options[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'o2':\r\n\t\t\t\t\tcorrect_answer = options[1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'o3':\r\n\t\t\t\t\tcorrect_answer = options[2];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'o4':\r\n\t\t\t\t\tcorrect_answer = options[3];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcorrect_answer = options[0];\r\n\t\t\t}\r\n\r\n\t\t\treturn correct_answer;\r\n\t\t};\r\n\r\n\t\tconst correct_answer = determineCorrectAnswer();\r\n\r\n\t\t// lay out initial structure of the custom question\r\n\t\tconst customQuestion = {\r\n\t\t\tqId: uuid(),\r\n\t\t\tquestion: values.question,\r\n\t\t\tdifficulty: values.difficulty,\r\n\t\t\tcategory: 'custom',\r\n\t\t\ttype:\r\n\t\t\t\toptions.includes('True') || options.includes('False')\r\n\t\t\t\t\t? 'boolean'\r\n\t\t\t\t\t: 'multiple',\r\n\t\t\tincorrect_answers: options.filter(o => o !== correct_answer),\r\n\t\t\tcorrect_answer,\r\n\t\t\toptions,\r\n\t\t\ttimer: values.timer,\r\n\t\t\tplayer: { id: 0, pName: '', score: 0 },\r\n\t\t\tmodifiers: {\r\n\t\t\t\ttimed: values.timed,\r\n\t\t\t\trapidfire: false\r\n\t\t\t}\r\n\t\t};\r\n\t\t// shuffle options prop if type is not boolean (True/False Questions)\r\n\t\tif (customQuestion.type !== 'boolean')\r\n\t\t\tcustomQuestion.options = shuffleArray([\r\n\t\t\t\t...customQuestion.incorrect_answers,\r\n\t\t\t\tcustomQuestion.correct_answer\r\n\t\t\t]);\r\n\r\n\t\tdispatch(createCustomQuestion(customQuestion));\r\n\t\tdispatch(showModal());\r\n\t\tsetCreateModalOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={handleOnSubmit}\r\n\t\t\trender={({ handleSubmit, form, submitting, values }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<LabelText>Question</LabelText>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"question\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field name=\"difficulty\">\r\n\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<LabelText>Difficulty</LabelText>\r\n\t\t\t\t\t\t\t\t\t<StyledSelect {...input}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"easy\">Easy</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"medium\">Medium</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"hard\">Hard</option>\r\n\t\t\t\t\t\t\t\t\t</StyledSelect>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o1\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o1\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 1\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o1\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o2\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o2\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 2\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o2\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o3\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o3\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 3\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o3\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"checked\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"o4\"\r\n\t\t\t\t\t\t\tstyle={{ opacity: 0 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<OptionLabel name=\"o4\" checked={values.checked}>\r\n\t\t\t\t\t\t\tOption 4\r\n\t\t\t\t\t\t</OptionLabel>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"o4\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tchecked={values.checked}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<Field name=\"timed\" component=\"input\" type=\"checkbox\" />\r\n\t\t\t\t\t\t<LabelText>Timer</LabelText>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"timer\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\tdisabled={!values.timed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<button type=\"submit\">Add</button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form } from 'react-final-form';\r\nimport uuid from 'uuid/v4';\r\nimport { showModal, savePreset, setPresetId } from '../../actions';\r\nimport { RootState, QuizPreset } from '../../types';\r\nimport {\r\n\tFieldContainer,\r\n\tLabelText,\r\n\tStyledInputField,\r\n\tSubmitBtn\r\n} from './formStyles';\r\n\r\ninterface SaveFormProps {\r\n\tsetSaveModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const SaveForm: React.FC<SaveFormProps> = ({ setSaveModalOpen }) => {\r\n\tinterface FormValues {\r\n\t\tpresetName: string;\r\n\t}\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst questions = useSelector((state: RootState) => state.quiz.questions);\r\n\r\n\tconst onFormSubmit = (values: FormValues): void => {\r\n\t\tsetSaveModalOpen(false);\r\n\t\tdispatch(showModal());\r\n\t\tconst preset: QuizPreset = {\r\n\t\t\tid: uuid(),\r\n\t\t\tpresetName: values.presetName,\r\n\t\t\tquestions: questions\r\n\t\t};\r\n\t\tdispatch(savePreset(preset));\r\n\t\tdispatch(setPresetId(preset.id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={onFormSubmit}\r\n\t\t\trender={({ handleSubmit, form, submitting, values }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<FieldContainer>\r\n\t\t\t\t\t\t<LabelText>Question</LabelText>\r\n\t\t\t\t\t\t<StyledInputField\r\n\t\t\t\t\t\t\tname=\"presetName\"\r\n\t\t\t\t\t\t\tcomponent=\"input\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter a name for your quiz preset\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FieldContainer>\r\n\r\n\t\t\t\t\t<SubmitBtn primary type=\"submit\">\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</SubmitBtn>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Button } from '../Menu/styles';\r\n\r\nexport const Root = styled.div`\r\n\twidth: 90%;\r\n\theight: fit-content;\r\n\tcolor: ${props => props.theme.colors.grey};\r\n\tpadding: 2rem 0rem;\r\n\tz-index: 100;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nexport const CreateQuizBtn = styled(Button)`\r\n\tfont-size: 1.5rem;\r\n\tfont-family: inherit;\r\n\ttext-transform: uppercase;\r\n\tpadding: 1rem 0.5rem;\r\n\tbox-shadow: 3px 3px 6px rgba(var(--primary-rgb-color), 0.2);\r\n\r\n\t:hover {\r\n\t\tbox-shadow: 3px 3px 6px rgba(var(--primary-rgb-color), 0.25);\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\twidth: 70rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 3rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport uuid from 'uuid/v4';\r\nimport { fetchQuestionsThunk } from '../../actions';\r\nimport { QuestionItem } from './QuestionItem';\r\nimport { CreateForm } from './CreateForm';\r\nimport { SaveForm } from './SaveForm';\r\nimport { Modal } from '../Modal';\r\nimport { showModal } from '../../actions';\r\nimport { RootState } from '../../types';\r\nimport { Root, ButtonContainer, CreateQuizBtn } from './miniQuestionsStyles';\r\n\r\nexport const WrappedComponent: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst questions = useSelector((state: RootState) => state.quiz.questions);\r\n\tconst modalShown = useSelector((state: RootState) => state.modal.modalShown);\r\n\tconst [createModalOpen, setCreateModalOpen] = useState(false);\r\n\tconst [saveModalOpen, setSaveModalOpen] = useState(false);\r\n\r\n\tconst onFetchBtnClick = (): void => {\r\n\t\tconst fetchRandomQuestions = async () => {\r\n\t\t\tawait fetchQuestionsThunk(dispatch, 1);\r\n\t\t};\r\n\t\tfetchRandomQuestions();\r\n\t};\r\n\r\n\tconst onCreateBtnClick = (): void => {\r\n\t\tsetCreateModalOpen(true);\r\n\t\tdispatch(showModal());\r\n\t};\r\n\r\n\tconst onSaveBtnClick = (): void => {\r\n\t\tsetSaveModalOpen(true);\r\n\t\tdispatch(showModal());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<CreateQuizBtn onClick={onFetchBtnClick} primary>\r\n\t\t\t\t\tFetch Question\r\n\t\t\t\t</CreateQuizBtn>\r\n\t\t\t\t<CreateQuizBtn onClick={onCreateBtnClick} primary>\r\n\t\t\t\t\tCreate Question\r\n\t\t\t\t</CreateQuizBtn>\r\n\t\t\t\t<CreateQuizBtn primary onClick={onSaveBtnClick}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</CreateQuizBtn>\r\n\t\t\t</ButtonContainer>\r\n\t\t\t{questions.map((q, i) => (\r\n\t\t\t\t<QuestionItem\r\n\t\t\t\t\tdisabled={modalShown}\r\n\t\t\t\t\tquestion={q}\r\n\t\t\t\t\ttype=\"random\"\r\n\t\t\t\t\tindex={i}\r\n\t\t\t\t\tqPos={i + 1}\r\n\t\t\t\t\tkey={q.qId}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<Modal\r\n\t\t\t\topen={createModalOpen}\r\n\t\t\t\tsetModalOpen={setCreateModalOpen}\r\n\t\t\t\taria-label=\"Create Question\"\r\n\t\t\t\tkey={uuid()}\r\n\t\t\t>\r\n\t\t\t\t<CreateForm setCreateModalOpen={setCreateModalOpen} />\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\topen={saveModalOpen}\r\n\t\t\t\tsetModalOpen={setSaveModalOpen}\r\n\t\t\t\taria-label=\"Save Questions\"\r\n\t\t\t\tkey={uuid()}\r\n\t\t\t>\r\n\t\t\t\t<SaveForm setSaveModalOpen={setSaveModalOpen} />\r\n\t\t\t</Modal>\r\n\t\t</Root>\r\n\t);\r\n};\r\n\r\n// exports the above declared functional component as a child of SortableContainer\r\nexport const MiniQuestions = SortableContainer(WrappedComponent);\r\n","import styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface ToolProps {\r\n\tmodeOn: number | undefined;\r\n}\r\n\r\nexport const Root = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbackground-color: ${props => props.theme.colors.lightGrey};\r\n\twidth: 30.95vw;\r\n\theight: 8%;\r\n\tbox-shadow: 0 0.5rem 0.6rem rgba(33, 33, 33, 0.1);\r\n\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-around;\r\n`;\r\n\r\nconst Tool = styled(FontAwesomeIcon)`\r\n\tfont-size: 3rem;\r\n\ttransition: all 0.25s;\r\n`;\r\n\r\nexport const ToolContainer = styled.div`\r\n\tcolor: rgba(var(--grey-rgb-color), 0.6);\r\n\theight: 3rem;\r\n\twidth: 3rem;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s;\r\n\r\n\t:hover {\r\n\t\tcolor: rgba(var(--grey-rgb-color), 1);\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t:active {\r\n\t\ttransform: translateY(0.5px);\r\n\t}\r\n`;\r\n\r\n// for better semantics\r\nexport const EditTool = styled(Tool)<ToolProps>`\r\n\tcolor: ${props => (props.modeOn ? props.theme.colors.primary : '')};\r\n`;\r\n\r\nexport const DeleteTool = styled(Tool)<ToolProps>`\r\n\tcolor: ${props => (props.modeOn ? props.theme.colors.primary : '')};\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editMode, deleteMode } from '../../actions';\r\nimport { RootState } from '../../types';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Root, ToolContainer, EditTool, DeleteTool } from './toolbarStyles';\r\n\r\nexport const Toolbar: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst toolbarSt = useSelector((state: RootState) => state.toolbar);\r\n\tconst { editModeState, deleteModeState } = toolbarSt;\r\n\tconst onEditClick = (): void => {\r\n\t\t// turn off edit mode if the user clicks on the edit tool again to disable it\r\n\t\tif (editModeState) {\r\n\t\t\tdispatch(editMode('OFF'));\r\n\t\t} else {\r\n\t\t\tdispatch(editMode('ON'));\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDeleteClick = (): void => {\r\n\t\tif (deleteModeState) {\r\n\t\t\tdispatch(deleteMode('OFF'));\r\n\t\t} else {\r\n\t\t\tdispatch(deleteMode('ON'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<ToolContainer onClick={onEditClick}>\r\n\t\t\t\t<EditTool modeOn={editModeState ? 1 : undefined} icon={faEdit} />\r\n\t\t\t</ToolContainer>\r\n\t\t\t<ToolContainer onClick={onDeleteClick}>\r\n\t\t\t\t<DeleteTool\r\n\t\t\t\t\tmodeOn={deleteModeState ? 1 : undefined}\r\n\t\t\t\t\ticon={faTrashAlt}\r\n\t\t\t\t></DeleteTool>\r\n\t\t\t</ToolContainer>\r\n\t\t</Root>\r\n\t);\r\n};\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\nimport { Title } from '../Menu/styles';\r\n\r\ninterface BlurBGProps {\r\n\tmodalShown: boolean;\r\n}\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\tbody {\r\n\t\toverflow-y: scroll;\r\n\t}\r\n\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 0 !important;\r\n\t}\r\n`;\r\n\r\nexport const GreyBG = styled.div`\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tbackground-color: #2ac46a;\r\n`;\r\n\r\nexport const Root = styled.div`\r\n\tposition: relative;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const Sidebar = styled.div`\r\n\theight: 100vh;\r\n\twidth: 30vw;\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tbackground-color: ${props => props.theme.colors.primary};\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\n/* The parent flex container (Root) is behaving a bit weird here. had to resort to using margins*/\r\nexport const CreateTitle = styled(Title)`\r\n\tletter-spacing: 1.5rem;\r\n\tfont-size: 8rem;\r\n\twidth: 30vw;\r\n\tmargin-left: 2.3rem;\r\n\ttext-align: center;\r\n`;\r\n\r\nexport const MiniQuestionsContainer = styled.div`\r\n\tfont-size: 3rem;\r\n\tbox-shadow: -5px 0px 6px rgba(46, 46, 46, 0.08);\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\tbackground-color: ${props => props.theme.colors.grey};\r\n\theight: 100vh;\r\n\twidth: 69vw;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\toverflow-y: scroll;\r\n`;\r\n\r\nexport const BlurBackground = styled.div<BlurBGProps>`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tbackground-image: linear-gradient(transparent 0%, transparent 100%);\r\n\tfilter: ${props => (props.modalShown ? 'blur(10px)' : '')};\r\n\tz-index: ${props => (props.modalShown ? 200 : 0)};\r\n`;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { arrayMove } from '../../helpers';\r\nimport { SortEnd } from 'react-sortable-hoc';\r\nimport { Link } from 'react-router-dom';\r\nimport { MiniQuestions } from './MiniQuestions';\r\nimport { Toolbar } from './Toolbar';\r\nimport { sortQuestion } from '../../actions/createQuizActions';\r\nimport { RootState } from '../../types';\r\nimport {\r\n\tGreyBG,\r\n\tGlobalStyle,\r\n\tRoot,\r\n\tSidebar,\r\n\tCreateTitle,\r\n\tMiniQuestionsContainer\r\n} from './styles';\r\n\r\nexport const CreateQuiz: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst questions = useSelector((state: RootState) => state.quiz.questions);\r\n\tconst { location } = useSelector((state: RootState) => state.router);\r\n\tconst shouldTransition = location.pathname.includes('create') ? 1 : 0;\r\n\tconst transitions = useTransition(shouldTransition, p => p, {\r\n\t\tfrom: { transform: 'translate(100%,0)' },\r\n\t\tenter: { transform: 'translate(0%,0)' },\r\n\t\tleave: { transform: 'translate(-50%,0)' }\r\n\t});\r\n\r\n\tconst handleOnSortEnd = ({ oldIndex, newIndex }: SortEnd): void => {\r\n\t\tconst sortedQuestions = arrayMove(oldIndex, newIndex, questions);\r\n\t\tdispatch(sortQuestion(sortedQuestions));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GreyBG>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t{transitions.map(({ props, key }) => (\r\n\t\t\t\t<animated.div key={key} style={props}>\r\n\t\t\t\t\t<Root>\r\n\t\t\t\t\t\t<Sidebar>\r\n\t\t\t\t\t\t\t<Toolbar />\r\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t<CreateTitle>Create</CreateTitle>\r\n\t\t\t\t\t\t</Sidebar>\r\n\t\t\t\t\t\t<MiniQuestionsContainer>\r\n\t\t\t\t\t\t\t<MiniQuestions\r\n\t\t\t\t\t\t\t\tdistance={3}\r\n\t\t\t\t\t\t\t\taxis=\"y\"\r\n\t\t\t\t\t\t\t\tlockAxis=\"y\"\r\n\t\t\t\t\t\t\t\tonSortEnd={handleOnSortEnd}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MiniQuestionsContainer>\r\n\t\t\t\t\t</Root>\r\n\t\t\t\t</animated.div>\r\n\t\t\t))}\r\n\t\t</GreyBG>\r\n\t);\r\n};\r\n","// A helper function to move around elements in an array (one dimensional)\r\n\r\n// Not really performant but it serves our use case since the array will be less than 101 elements\r\nexport const arrayMove = (oldI: number, newI: number, array: any[]): any[] => {\r\n\tconst backward = oldI > newI;\r\n\tconst movedElem = array[oldI];\r\n\r\n\tif (backward) {\r\n\t\tconst sortedArray = [\r\n\t\t\t...array.slice(0, newI),\r\n\t\t\tmovedElem,\r\n\t\t\t...array.slice(newI, oldI),\r\n\t\t\t...array.slice(oldI + 1)\r\n\t\t];\r\n\t\treturn sortedArray;\r\n\t} else {\r\n\t\tconst sortedArray = [\r\n\t\t\t...array.slice(0, oldI),\r\n\t\t\t...array.slice(oldI + 1, newI + 1),\r\n\t\t\tmovedElem,\r\n\t\t\t...array.slice(newI + 1)\r\n\t\t];\r\n\t\treturn sortedArray;\r\n\t}\r\n};\r\n","import { createReducer } from 'typesafe-actions';\r\nimport uuid from 'uuid/v4';\r\nimport {\r\n\tfetchQuestions,\r\n\tstartQuiz,\r\n\tsetPresetId,\r\n\tsortQuestion,\r\n\tcreateCustomQuestion,\r\n\tsaveEditedQuestion,\r\n\tdeleteQuestion,\r\n\tsavePreset\r\n} from '../actions';\r\nimport { Question, QuizPreset } from '../types';\r\n\r\ninterface IState {\r\n\treadonly questions: Question[];\r\n\treadonly started: boolean;\r\n\treadonly presets: QuizPreset[];\r\n\treadonly curPresetId: string;\r\n}\r\n\r\nconst initialState: IState = {\r\n\tquestions: [],\r\n\tstarted: false,\r\n\tpresets: JSON.parse(window.localStorage.getItem('quizPresets') || '[]'),\r\n\tcurPresetId: ''\r\n};\r\n\r\nexport const quizReducer = createReducer(initialState)\r\n\t.handleAction(fetchQuestions, (state, action) => {\r\n\t\tconst newPayload = action.payload.map(q => ({\r\n\t\t\tqId: uuid(),\r\n\t\t\t...q\r\n\t\t}));\r\n\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tquestions: [...state.questions, ...newPayload]\r\n\t\t};\r\n\t})\r\n\t.handleAction(startQuiz, (state, _) => ({\r\n\t\t...state,\r\n\t\tstarted: true\r\n\t}))\r\n\t.handleAction(setPresetId, (state, action) => ({\r\n\t\t...state,\r\n\t\tcurPresetId: action.payload,\r\n\t\tquestions: [\r\n\t\t\t...state.presets.filter(p => p.id === action.payload)[0].questions\r\n\t\t]\r\n\t}))\r\n\t.handleAction(sortQuestion, (state, action) => ({\r\n\t\t...state,\r\n\t\tquestions: action.payload\r\n\t}))\r\n\t.handleAction(createCustomQuestion, (state, action) => ({\r\n\t\t...state,\r\n\t\tquestions: [...state.questions, action.payload]\r\n\t}))\r\n\t.handleAction(saveEditedQuestion, (state, action) => {\r\n\t\tconst editedQuestion = state.questions.filter(\r\n\t\t\tq => q.qId === action.payload.qId\r\n\t\t)[0];\r\n\r\n\t\t// overwrite the selected question with the new properties\r\n\t\tconst newQuestion = {\r\n\t\t\t...editedQuestion,\r\n\t\t\t...action.payload\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tquestions: state.questions.map(q =>\r\n\t\t\t\tq.qId === action.payload.qId ? newQuestion : q\r\n\t\t\t)\r\n\t\t};\r\n\t})\r\n\t.handleAction(deleteQuestion, (state, action) => ({\r\n\t\t...state,\r\n\t\tquestions: state.questions.filter(q => q.qId !== action.payload)\r\n\t}))\r\n\t.handleAction(savePreset, (state, action) => {\r\n\t\t/**\r\n\t\t * Info about Quiz Presets:\r\n\t\t * - A quiz preset describes the id by which the preset will be identified and an array of questions \t\t \t\t which the user specified in the create section\r\n\t\t * - In the config form, the user is asked to select a preset either from the locally saved presets or \t\t\t from a preset uploaded by another user\r\n\t\t */\r\n\t\tconst newPresets = [...state.presets, action.payload];\r\n\t\twindow.localStorage.setItem('quizPresets', JSON.stringify(newPresets));\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpresets: newPresets\r\n\t\t};\r\n\t});\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { validateChoice, rehydrateState } from '../actions';\r\n\r\n// if chosen option is correct, then choiceValid is true, else false.\r\ninterface IState {\r\n\treadonly choiceValid: boolean | null;\r\n}\r\n\r\n// will be null before the user has made their choice\r\nconst initialState: IState = {\r\n\tchoiceValid: null\r\n};\r\n\r\nexport const questionReducer = createReducer(initialState)\r\n\t.handleAction(validateChoice, (state, action) => ({\r\n\t\t...state,\r\n\t\tchoiceValid:\r\n\t\t\taction.payload.choice === action.payload.correctAnswer ? true : false\r\n\t}))\r\n\t.handleAction(rehydrateState, () => ({\r\n\t\t...initialState\r\n\t}));\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { showModal } from '../actions';\r\n\r\ninterface IState {\r\n\treadonly modalShown: boolean;\r\n}\r\n\r\nconst initialState: IState = {\r\n\tmodalShown: false\r\n};\r\n\r\nexport const modalReducer = createReducer(initialState).handleAction(\r\n\tshowModal,\r\n\t(state, _) => ({\r\n\t\t...state,\r\n\t\tmodalShown: !state.modalShown\r\n\t})\r\n);\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { editMode, deleteMode } from '../actions';\r\n\r\ninterface IState {\r\n\t[index: string]: any;\r\n\treadonly editModeState: boolean;\r\n\treadonly deleteModeState: boolean;\r\n}\r\n\r\nconst initialState: IState = {\r\n\teditModeState: false,\r\n\tdeleteModeState: false\r\n};\r\n\r\n// should be called each time an action for enabling a tool is dispatched.\r\n// this function disables every tool which is enabled i.e set to true\r\nconst disableOtherTools = (state: IState): void => {\r\n\t// eslint-disable-next-line\r\n\tObject.keys(state).map(key => {\r\n\t\tif (state[key]) state[key] = false;\r\n\t});\r\n};\r\n\r\nexport const toolbarReducer = createReducer(initialState)\r\n\t.handleAction(editMode, (state, action) => {\r\n\t\tdisableOtherTools(state);\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\teditModeState: action.payload === 'ON' ? true : false\r\n\t\t};\r\n\t})\r\n\t.handleAction(deleteMode, (state, action) => {\r\n\t\tdisableOtherTools(state);\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tdeleteModeState: action.payload === 'ON' ? true : false\r\n\t\t};\r\n\t});\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { updateScore } from '../actions';\r\nimport { Player } from '../types';\r\n\r\ninterface IState {\r\n\tplayers: Player[];\r\n}\r\n\r\n// players should ideally be dynamically added when the user is presented with the config component to set up the initial settings of the quiz\r\nconst initialState: IState = {\r\n\tplayers: [\r\n\t\t{ id: 0, pName: 'Player 1', score: 0 },\r\n\t\t{ id: 1, pName: 'Player 2', score: 0 },\r\n\t\t{ id: 2, pName: 'Player 3', score: 0 }\r\n\t]\r\n};\r\n\r\nexport const scoreboardReducer = createReducer(initialState).handleAction(\r\n\tupdateScore,\r\n\t(state, action) => ({\r\n\t\t...state,\r\n\t\tplayers: state.players.map(p =>\r\n\t\t\tp.id === action.payload.id\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tid: p.id,\r\n\t\t\t\t\t\tpName: p.pName,\r\n\t\t\t\t\t\tscore: p.score + action.payload.score\r\n\t\t\t\t  }\r\n\t\t\t\t: p\r\n\t\t)\r\n\t})\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { quizReducer } from './quizReducers';\r\nimport { questionReducer } from './questionReducers';\r\nimport { modalReducer } from './modalReducers';\r\nimport { toolbarReducer } from './toolbarReducers';\r\nimport { scoreboardReducer } from './scoreboardReducers';\r\n\r\nexport const rootReducer = (history: any) =>\r\n\tcombineReducers({\r\n\t\trouter: connectRouter(history),\r\n\t\tquiz: quizReducer,\r\n\t\tquestion: questionReducer,\r\n\t\tmodal: modalReducer,\r\n\t\ttoolbar: toolbarReducer,\r\n\t\tscoreboard: scoreboardReducer\r\n\t});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers';\r\nimport { ActionType } from 'typesafe-actions';\r\n\r\ndeclare module 'typesafe-actions' {\r\n\tinterface Types {\r\n\t\tRootAction: ActionType<typeof import('../actions')>;\r\n\t}\r\n}\r\n\r\nexport const history = createHashHistory({\r\n\tbasename: '',\r\n\thashType: 'noslash'\r\n});\r\n\r\nconst middleware = [thunk, routerMiddleware(history)];\r\n\r\n// rehydrate state when app starts\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n\trootReducer(history),\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import styled, { css } from 'styled-components';\r\n\r\ninterface RootProps {\r\n\tselected: boolean;\r\n}\r\n\r\nexport const Root = styled.div<RootProps>`\r\n\twidth: 90%;\r\n\theight: 6rem;\r\n\tborder-radius: 10px;\r\n\tbackground-color: ${props =>\r\n\t\tprops.selected ? props.theme.colors.amethyst : props.theme.colors.grey};\r\n\t${props =>\r\n\t\tprops.selected\r\n\t\t\t? css`\r\n\t\t\t\t\tbox-shadow: 0rem 0.3rem 0.6rem rgba(var(--amethyst-rgb-color), 0.25);\r\n\t\t\t  `\r\n\t\t\t: css`\r\n\t\t\t\t\tbox-shadow: 0rem 0.3rem 0.6rem rgba(var(--grey-rgb-color), 0.25);\r\n\t\t\t  `}\r\n\tmargin: 2.7rem 0rem;\r\n\tpadding: 2.6rem 1.4rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s ease-in-out;\r\n\r\n\t:hover {\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t:active {\r\n\t\ttransform: translateY(0.3px);\r\n\t}\r\n`;\r\n\r\nexport const PresetName = styled.h2`\r\n\tcolor: ${props => props.theme.colors.secondary};\r\n\ttext-transform: uppercase;\r\n\tfont-size: 3rem;\r\n\tfont-weight: 300;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPresetId } from '../../actions';\r\nimport { QuizPreset } from '../../types';\r\nimport { Root, PresetName } from './presetItemStyles';\r\n\r\ninterface PresetItemProps extends QuizPreset {\r\n\tselected: boolean;\r\n}\r\n\r\nexport const PresetItem: React.FC<PresetItemProps> = props => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onPresetClick = (): void => {\r\n\t\tdispatch(setPresetId(props.id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Root onClick={onPresetClick} selected={props.selected}>\r\n\t\t\t<PresetName>{props.presetName}</PresetName>\r\n\t\t</Root>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Root = styled.div`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { PresetItem } from './PresetItem';\r\nimport { RootState } from '../../types';\r\nimport { Root } from './miniPresetsStyles';\r\n\r\nexport const MiniPresets: React.FC = () => {\r\n\tconst quizPresets = useSelector((state: RootState) => state.quiz.presets);\r\n\tconst curPresetId = useSelector((state: RootState) => state.quiz.curPresetId);\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t{quizPresets.map(p => (\r\n\t\t\t\t<PresetItem selected={p.id === curPresetId} {...p} />\r\n\t\t\t))}\r\n\t\t</Root>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Title } from '../Menu/styles';\r\n\r\nexport const Root = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tz-index: 1000;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tbackground-image: linear-gradient(\r\n\t\t90deg,\r\n\t\t#2ac46a 0%,\r\n\t\t#2ac46a 30%,\r\n\t\t#fcfcf3 30%\r\n\t);\r\n`;\r\n\r\nexport const LeftContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 30vw;\r\n\theight: 100vh;\r\n`;\r\n\r\n// RightContainer will contain the respective scores\r\nexport const RightContainer = styled.div`\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 0 !important;\r\n\t}\r\n\r\n\tdisplay: flex;\r\n\twidth: 70vw;\r\n\theight: 100vh;\r\n\talign-items: flex-start;\r\n\tflex-direction: column;\r\n\tpadding: 3rem 0rem;\r\n\tpadding-left: 4rem;\r\n\toverflow-y: scroll;\r\n`;\r\n\r\nexport const ConfigTitle = styled(Title)`\r\n\tletter-spacing: 0.9rem;\r\n\tfont-size: 8rem;\r\n`;\r\n\r\nexport const SectionHeading = styled.h2`\r\n\ttext-transform: uppercase;\r\n\tcolor: ${props => props.theme.colors.grey};\r\n\tfont-size: 7rem;\r\n\tfont-weight: 300;\r\n\tmargin-bottom: 2.3rem;\r\n\tpadding-bottom: 0.5rem;\r\n\tborder-bottom: 0.5rem solid ${props => props.theme.colors.primary};\r\n`;\r\n\r\nexport const SectionContainer = styled.section`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MiniPresets } from './MiniPresets';\r\nimport {\r\n\tRoot,\r\n\tLeftContainer,\r\n\tRightContainer,\r\n\tConfigTitle,\r\n\tSectionHeading\r\n} from './styles';\r\n\r\nexport const Config: React.FC = () => {\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<LeftContainer>\r\n\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t<ConfigTitle>Config</ConfigTitle>\r\n\t\t\t</LeftContainer>\r\n\r\n\t\t\t<RightContainer>\r\n\t\t\t\t<SectionHeading>Select Preset</SectionHeading>\r\n\t\t\t\t<MiniPresets />\r\n\t\t\t</RightContainer>\r\n\t\t</Root>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Menu } from './Menu';\r\nimport { Question } from './Question';\r\nimport { CreateQuiz } from './CreateQuiz';\r\nimport { history } from '../store';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../types';\r\nimport { Config } from './Config';\r\n\r\nexport const Routes: React.FC = () => {\r\n\tconst started = useSelector((state: RootState) => state.quiz.started);\r\n\r\n\treturn (\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" render={() => <Menu />} />\r\n\t\t\t\t{started && (\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/start/q/:qId\"\r\n\t\t\t\t\t\trender={routeProps => <Question {...routeProps} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Route exact path=\"/create\" render={() => <CreateQuiz />} />\r\n\t\t\t\t<Route exact path=\"/configure\" render={() => <Config />} />\r\n\t\t\t</Switch>\r\n\t\t</ConnectedRouter>\r\n\t);\r\n};\r\n","import React, { useEffect } from 'react';\nimport { Routes } from './Routes';\nimport styled from 'styled-components';\nimport { animated, useSpring } from 'react-spring';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPresetId } from '../actions';\nimport { RootState } from '../types';\n\nconst Background = styled(animated.div)`\n\t--primary-rgb-color: 38, 188, 99; /* rgb version of our primary green color */\n\t--secondary-rgb-color: 242, 243, 229;\n\t--amethyst-rgb-color: 101, 0, 246;\n\t--grey-rgb-color: 46, 46, 46;\n\theight: 100vh;\n`;\n\nexport const App: React.FC = () => {\n\tconst dispatch = useDispatch();\n\t// using both location.pathname and the started boolean in order to determine if we should flip the background. maybe there's a better solution?\n\tconst { location } = useSelector((state: RootState) => state.router);\n\tconst started = useSelector((state: RootState) => state.quiz.started);\n\tconst quizPresets = useSelector((state: RootState) => state.quiz.presets);\n\n\tuseEffect(() => {\n\t\tquizPresets[0] && dispatch(setPresetId(quizPresets[0].id));\n\t}, []);\n\n\t// animates when the Question component renders\n\tconst animProps = useSpring({\n\t\tfrom: {\n\t\t\tbackgroundImage:\n\t\t\t\t'linear-gradient(120deg, #2ac46a 0%, #2ac46a 50%, #fcfcf3 50%)'\n\t\t},\n\t\tto: {\n\t\t\tbackgroundImage:\n\t\t\t\tlocation.pathname.includes('/start/q/') && started\n\t\t\t\t\t? 'linear-gradient(180deg, #2ac46a 0%, #2ac46a 50%, #fcfcf3 50%)'\n\t\t\t\t\t: 'linear-gradient(120deg, #2ac46a 0%, #2ac46a 50%, #fcfcf3 50%)'\n\t\t}\n\t});\n\n\treturn (\n\t\t<Background style={animProps}>\n\t\t\t<Routes />\n\t\t</Background>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { createGlobalStyle } from 'styled-components';\nimport { ThemeProvider } from 'styled-components';\nimport { mainTheme } from './themes';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  body, html {\n    height: 100%;\n    font-size: 62.5%; /* 1rem = 10px */\n  }\n\n  body {\n    box-sizing: border-box;\n\t\tfont-family: \"Montserrat\", sans-serif, serif;\n    overflow: hidden;\n\t}\n`;\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<GlobalStyle />\n\t\t<ThemeProvider theme={mainTheme}>\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const mainTheme: DefaultTheme = {\r\n\tcolors: {\r\n\t\tprimary: '#2ac46a',\r\n\t\tprimaryDark: '#00A896',\r\n\t\t//secondaryMedium: '#fafbed',\r\n\t\tsecondary: '#fcfcf3',\r\n\t\ttertiary: '#028090',\r\n\t\ttertiaryDark: '#05668D',\r\n\t\tgrey: '#333',\r\n\t\tlightGrey: '#f7f7f7',\r\n\t\tmediumGrey: '#eee',\r\n\t\tamethyst: '#6e00fe',\r\n\t\tpinkRed: '#f10b4a'\r\n\t}\r\n};\r\n","// CENTRAL EXPORT POINT\r\nexport * from './actions'; // exports type string constants for action creators\r\nexport * from './rootTypes'; // exports types for our RootState and RootAction and the type for Store\r\nexport * from './Question.interface';\r\nexport * from './Player.interface';\r\nexport * from './QuizPreset.interface';","// QUIZ APP TYPE CONSTANTS\r\nexport const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\r\nexport const START_QUIZ = 'START_QUIZ';\r\nexport const SET_PRESET_ID = 'SET_PRESET_ID';\r\n\r\n// QUESTION TYPE CONSTANTS\r\nexport const VALIDATE_CHOICE = 'VALIDATE_CHOICE';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\n\r\n// CREATE QUIZ TYPE CONSTANTS\r\nexport const SORT_QUESTION = 'SORT_QUESTION';\r\nexport const OPEN_CREATE_MODAL = 'OPEN_CREATE_MODAL';\r\nexport const OPEN_EDIT_MODAL = 'OPEN_EDIT_MODAL';\r\nexport const SAVE_EDITED_QUESTION = 'SAVE_EDITED_QUESTION';\r\nexport const CREATE_CUSTOM_QUESTION = 'CREATE_CUSTOM_QUESTION';\r\nexport const SAVE_PRESET = 'SAVE_PRESET';\r\n\r\n// MODAL TYPE CONSTANTS\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\n\r\n// TOOLBAR TYPE CONSTANTS\r\nexport const EDIT_MODE = 'EDIT_MODE';\r\nexport const DELETE_MODE = 'DELETE_MODE';\r\n\r\n// MISC TYPE CONSTANTS\r\nexport const REHYDRATE_STATE = 'REHYDRATE_STATE';\r\n"],"sourceRoot":""}